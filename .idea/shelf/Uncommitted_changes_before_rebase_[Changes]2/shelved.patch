Index: main.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from flask import Flask, redirect, render_template\r\nfrom flask_login import login_required, LoginManager, login_user, logout_user\r\n\r\nfrom data import db_session\r\nfrom data.users import User\r\nfrom data.cards import Card\r\n\r\nfrom forms.authorizer_forms import RegisterForm, LoginForm\r\nfrom forms.card_form import CardsForm\r\n\r\napp = Flask(__name__)\r\napp.config['SECRET_KEY'] = 'yandexlyceum_secret_key'\r\n\r\nlogin_manager = LoginManager()\r\nlogin_manager.init_app(app)\r\n\r\n\r\n@login_manager.user_loader\r\ndef load_user(user_id):\r\n    db_sess = db_session.create_session()\r\n    return db_sess.query(User).get(user_id)\r\n\r\n\r\n@app.route(\"/\")\r\ndef index():\r\n    db_sess = db_session.create_session()\r\n    return render_template(\"index.html\", title='indexpage')\r\n\r\n\r\n@app.route('/register', methods=['GET', 'POST'])\r\ndef reqister():\r\n    form = RegisterForm()\r\n    if form.validate_on_submit():\r\n        if form.password.data != form.password_again.data:\r\n            return render_template('register.html', title='Регистрация',\r\n                                   form=form,\r\n                                   message=\"Пароли не совпадают\")\r\n        db_sess = db_session.create_session()\r\n        if db_sess.query(User).filter(User.email == form.email.data).first():\r\n            return render_template('register.html', title='Регистрация',\r\n                                   form=form,\r\n                                   message=\"Такой пользователь уже есть\")\r\n        user = User(\r\n            nickname=form.nickname.data,\r\n            region=form.region.data,\r\n            email=form.email.data,\r\n            about=form.about.data\r\n        )\r\n        user.set_password(form.password.data)\r\n        db_sess.add(user)\r\n        db_sess.commit()\r\n        return redirect('/')\r\n    return render_template('register.html', title='Регистрация', form=form)\r\n\r\n\r\n@app.route('/login', methods=['GET', 'POST'])\r\ndef login():\r\n    form = LoginForm()\r\n    if form.validate_on_submit():\r\n        db_sess = db_session.create_session()\r\n        user = db_sess.query(User).filter(User.email == form.email.data).first()\r\n        if user and user.check_password(form.password.data):\r\n            login_user(user, remember=form.remember_me.data)\r\n            return redirect(\"/\")\r\n        return render_template('login.html',\r\n                               message=\"Неправильный логин или пароль\",\r\n                               form=form)\r\n    return render_template('login.html', title='Авторизация', form=form)\r\n\r\n\r\n@app.route('/cards',  methods=['GET', 'POST'])\r\n@login_required\r\ndef add_news():\r\n    pass\r\n    form = CardsForm()\r\n    if form.validate_on_submit():\r\n        db_sess = db_session.create_session()\r\n        cards = Card()\r\n        cards.title = form.title.data\r\n        cards.region = form.region.data\r\n        cards.place = form.place.data\r\n        cards.longest = form.longest.data\r\n        db_sess.add(cards)\r\n        db_sess.commit()\r\n        return redirect('/')\r\n    return render_template('card.html', title='Добавление Маршрут',\r\n                           form=form)\r\n\r\n\r\n@app.route('/logout')\r\n@login_required\r\ndef logout():\r\n    logout_user()\r\n    return redirect(\"/\")\r\n\r\n\r\ndef main():\r\n    db_session.global_init(\"db/blogs.db\")\r\n    app.run()\r\n\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main.py b/main.py
--- a/main.py	(revision 3912dad0cc9b32d1f91f2d23519761b7fd6b1f19)
+++ b/main.py	(date 1681905359190)
@@ -1,32 +1,19 @@
 from flask import Flask, redirect, render_template
-from flask_login import login_required, LoginManager, login_user, logout_user
 
 from data import db_session
 from data.users import User
-from data.cards import Card
-
-from forms.authorizer_forms import RegisterForm, LoginForm
-from forms.card_form import CardsForm
+from forms.user import RegisterForm
 
 app = Flask(__name__)
 app.config['SECRET_KEY'] = 'yandexlyceum_secret_key'
 
-login_manager = LoginManager()
-login_manager.init_app(app)
 
-
-@login_manager.user_loader
-def load_user(user_id):
-    db_sess = db_session.create_session()
-    return db_sess.query(User).get(user_id)
+def main():
+    db_session.global_init("db/blogs.db")
+    app.run(port=8080, host='127.0.0.1')
 
 
 @app.route("/")
-def index():
-    db_sess = db_session.create_session()
-    return render_template("index.html", title='indexpage')
-
-
 @app.route('/register', methods=['GET', 'POST'])
 def reqister():
     form = RegisterForm()
@@ -41,63 +28,16 @@
                                    form=form,
                                    message="Такой пользователь уже есть")
         user = User(
-            nickname=form.nickname.data,
-            region=form.region.data,
+            name=form.name.data,
             email=form.email.data,
             about=form.about.data
         )
         user.set_password(form.password.data)
         db_sess.add(user)
         db_sess.commit()
-        return redirect('/')
+        return redirect('/login')
     return render_template('register.html', title='Регистрация', form=form)
 
 
-@app.route('/login', methods=['GET', 'POST'])
-def login():
-    form = LoginForm()
-    if form.validate_on_submit():
-        db_sess = db_session.create_session()
-        user = db_sess.query(User).filter(User.email == form.email.data).first()
-        if user and user.check_password(form.password.data):
-            login_user(user, remember=form.remember_me.data)
-            return redirect("/")
-        return render_template('login.html',
-                               message="Неправильный логин или пароль",
-                               form=form)
-    return render_template('login.html', title='Авторизация', form=form)
-
-
-@app.route('/cards',  methods=['GET', 'POST'])
-@login_required
-def add_news():
-    pass
-    form = CardsForm()
-    if form.validate_on_submit():
-        db_sess = db_session.create_session()
-        cards = Card()
-        cards.title = form.title.data
-        cards.region = form.region.data
-        cards.place = form.place.data
-        cards.longest = form.longest.data
-        db_sess.add(cards)
-        db_sess.commit()
-        return redirect('/')
-    return render_template('card.html', title='Добавление Маршрут',
-                           form=form)
-
-
-@app.route('/logout')
-@login_required
-def logout():
-    logout_user()
-    return redirect("/")
-
-
-def main():
-    db_session.global_init("db/blogs.db")
-    app.run()
-
-
 if __name__ == '__main__':
     main()
Index: templates/card.html
===================================================================
diff --git a/templates/card.html b/templates/card.html
deleted file mode 100644
--- a/templates/card.html	(revision 3912dad0cc9b32d1f91f2d23519761b7fd6b1f19)
+++ /dev/null	(revision 3912dad0cc9b32d1f91f2d23519761b7fd6b1f19)
@@ -1,46 +0,0 @@
-{% extends "base.html" %}
-
-{% block content %}
-<h1>Создание карточки</h1>
-<form action="" method="post">
-    {{ form.hidden_tag() }}
-    <p>
-        {{ form.title.label }}<br>
-        {{ form.title(class="form-control") }}<br>
-        {% for error in form.title.errors %}
-            <p class="alert alert-danger" role="alert">
-                {{ error }}
-            </p>
-        {% endfor %}
-    </p>
-    <p>
-        {{ form.region.label }}<br>
-        {{ form.region(class="form-control") }}<br>
-        {% for error in form.region.errors %}
-            <p class="alert alert-danger" role="alert">
-                {{ error }}
-            </p>
-        {% endfor %}
-    </p>
-    <p>
-        {{ form.place.label }}<br>
-        {{ form.place(class="form-control") }}<br>
-        {% for error in form.place.errors %}
-            <p class="alert alert-danger" role="alert">
-                {{ error }}
-            </p>
-        {% endfor %}
-    </p>
-    <p>
-        {{ form.longest.label }}<br>
-        {{ form.longest(class="form-control") }}<br>
-        {% for error in form.longest.errors %}
-            <p class="alert alert-danger" role="alert">
-                {{ error }}
-            </p>
-        {% endfor %}
-    </p>
-    <p>{{ form.submit(type="submit", class="btn btn-primary") }}</p>
-    {{message}}
-</form>
-{% endblock %}
\ No newline at end of file
Index: forms/card_form.py
===================================================================
diff --git a/forms/card_form.py b/forms/card_form.py
deleted file mode 100644
--- a/forms/card_form.py	(revision 3912dad0cc9b32d1f91f2d23519761b7fd6b1f19)
+++ /dev/null	(revision 3912dad0cc9b32d1f91f2d23519761b7fd6b1f19)
@@ -1,101 +0,0 @@
-from flask_wtf import FlaskForm
-from wtforms import StringField, IntegerField, TextAreaField, DateTimeField, SelectField
-from wtforms import BooleanField, SubmitField
-from wtforms.validators import DataRequired
-
-regions = [(1, "Республика Адыгея (Адыгея)"),
-           (2, "Республика Башкортостан"),
-           (3, "Республика Бурятия"),
-           (4, "Республика Алтай"),
-           (5, "Республика Дагестан"),
-           (6, "Республика Ингушетия"),
-           (7, "Кабардино-Балкарская Республика"),
-           (8, "Республика Калмыкия"),
-           (9, "Карачаево-Черкесская Республика"),
-           (10, "Республика Карелия"),
-           (11, "Республика Коми"),
-           (12, "Республика Марий Эл"),
-           (13, "Республика Мордовия"),
-           (14, "Республика Саха (Якутия)"),
-           (15, "Республика Северная Осетия - Алания"),
-           (16, "Республика Татарстан (Татарстан)"),
-           (17, "Республика Тыва"),
-           (18, "Удмуртская Республика"),
-           (19, "Республика Хакасия"),
-           (20, "Чеченская Республика"),
-           (21, "Чувашская Республика - Чувашия"),
-           (22, "Алтайский край"),
-           (23, "Краснодарский край"),
-           (24, "Красноярский край"),
-           (25, "Приморский край"),
-           (26, "Ставропольский край"),
-           (27, "Хабаровский край"),
-           (28, "Амурская область"),
-           (29, "Архангельская область"),
-           (30, "Астраханская область"),
-           (31, "Белгородская область"),
-           (32, "Брянская область"),
-           (33, "Владимирская область"),
-           (34, "Волгоградская область"),
-           (35, "Вологодская область"),
-           (36, "Воронежская область"),
-           (37, "Ивановская область"),
-           (38, "Иркутская область"),
-           (39, "Калининградская область"),
-           (40, "Калужская область"),
-           (41, "Камчатский край"),
-           (42, "Кемеровская область"),
-           (43, "Кировская область"),
-           (44, "Костромская область"),
-           (45, "Курганская область"),
-           (46, "Курская область"),
-           (47, "Ленинградская область"),
-           (48, "Липецкая область"),
-           (49, "Магаданская область"),
-           (50, "Московская область"),
-           (51, "Мурманская область"),
-           (52, "Нижегородская область"),
-           (53, "Новгородская область"),
-           (54, "Новосибирская область"),
-           (55, "Омская область"),
-           (56, "Оренбургская область"),
-           (57, "Орловская область"),
-           (58, "Пензенская область"),
-           (59, "Пермский край"),
-           (60, "Псковская область"),
-           (61, "Ростовская область"),
-           (62, "Рязанская область"),
-           (63, "Самарская область"),
-           (64, "Саратовская область"),
-           (65, "Сахалинская область"),
-           (66, "Свердловская область"),
-           (67, "Смоленская область"),
-           (68, "Тамбовская область"),
-           (69, "Тверская область"),
-           (70, "Томская область"),
-           (71, "Тульская область"),
-           (72, "Тюменская область"),
-           (73, "Ульяновская область"),
-           (74, "Челябинская область"),
-           (75, "Забайкальский край"),
-           (76, "Ярославская область"),
-           (77, "г. Москва"),
-           (78, "Санкт-Петербург"),
-           (79, "Еврейская автономная область"),
-           (83, "Ненецкий автономный округ"),
-           (86, "Ханты-Мансийский автономный округ - Югра"),
-           (87, "Чукотский автономный округ"),
-           (89, "Ямало-Ненецкий автономный округ")
-           ]
-
-
-class CardsForm(FlaskForm):
-    title = StringField('Название', validators=[DataRequired()])
-
-    region = SelectField('Region', coerce=int, choices=regions)
-
-    place = StringField('Место')
-
-    longest = IntegerField('продолжительность')
-
-    submit = SubmitField('Применить')
\ No newline at end of file
Index: forms/authorizer_forms.py
===================================================================
diff --git a/forms/authorizer_forms.py b/forms/authorizer_forms.py
deleted file mode 100644
--- a/forms/authorizer_forms.py	(revision 3912dad0cc9b32d1f91f2d23519761b7fd6b1f19)
+++ /dev/null	(revision 3912dad0cc9b32d1f91f2d23519761b7fd6b1f19)
@@ -1,20 +0,0 @@
-from flask_wtf import FlaskForm
-from wtforms import PasswordField, StringField, TextAreaField, SubmitField, EmailField, BooleanField
-from wtforms.validators import DataRequired
-
-
-class RegisterForm(FlaskForm):
-    email = EmailField('Почта', validators=[DataRequired()])
-    password = PasswordField('Пароль', validators=[DataRequired()])
-    password_again = PasswordField('Повторите пароль', validators=[DataRequired()])
-    nickname = StringField('Имя пользователя', validators=[DataRequired()])
-    region = StringField('Регион пользователя', validators=[DataRequired()])
-    about = TextAreaField("Немного о себе")
-    submit = SubmitField('Войти')
-
-
-class LoginForm(FlaskForm):
-    email = EmailField('Почта', validators=[DataRequired()])
-    password = PasswordField('Пароль', validators=[DataRequired()])
-    remember_me = BooleanField('Запомнить меня')
-    submit = SubmitField('Войти')
Index: data/cards.py
===================================================================
diff --git a/data/cards.py b/data/cards.py
deleted file mode 100644
--- a/data/cards.py	(revision 3912dad0cc9b32d1f91f2d23519761b7fd6b1f19)
+++ /dev/null	(revision 3912dad0cc9b32d1f91f2d23519761b7fd6b1f19)
@@ -1,23 +0,0 @@
-import datetime
-
-import sqlalchemy
-from sqlalchemy import orm
-
-from data.db_session import SqlAlchemyBase
-
-
-class Card(SqlAlchemyBase):
-    __tablename__ = 'cards'
-
-    id = sqlalchemy.Column(sqlalchemy.Integer, primary_key=True, autoincrement=True)
-    title = sqlalchemy.Column(sqlalchemy.String)
-    region = sqlalchemy.Column(sqlalchemy.String)
-    place = sqlalchemy.Column(sqlalchemy.Integer)
-    longest = sqlalchemy.Column(sqlalchemy.String)
-    changed_at = sqlalchemy.Column(sqlalchemy.Date, default=datetime.datetime.now)
-    map = sqlalchemy.Column(sqlalchemy.String, nullable=True)
-    txts = sqlalchemy.Column(sqlalchemy.String, nullable=True)
-    medias = sqlalchemy.Column(sqlalchemy.String, nullable=True)
-    creator = sqlalchemy.Column(sqlalchemy.Integer,
-                                    sqlalchemy.ForeignKey("users.id"), default=1)
-    leader_obj = orm.relationship('User')
\ No newline at end of file
Index: templates/index.html
===================================================================
diff --git a/templates/index.html b/templates/index.html
deleted file mode 100644
--- a/templates/index.html	(revision 3912dad0cc9b32d1f91f2d23519761b7fd6b1f19)
+++ /dev/null	(revision 3912dad0cc9b32d1f91f2d23519761b7fd6b1f19)
@@ -1,17 +0,0 @@
-{% extends "base.html" %}
-
-{% block content %}
-<h1>Index page</h1>
-{% if current_user.is_authenticated %}
-<p>Вы авторизованы</p>
-{% for item in cards%}
-<a>
-<h2>{{item.title}}</h2>
-<h3>{{item.region}}, {{item.place}}</h3>
-<h3>item.creator-item.changed_at</h3>
-</a>
-{% endfor %}
-{% else %}
-<p>Вы не авторизованы</p>
-{% endif %}
-{% endblock %}
\ No newline at end of file
Index: templates/base.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n    <link rel=\"stylesheet\"\r\n          href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\"\r\n          integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\"\r\n          crossorigin=\"anonymous\">\r\n    <title>{{title}}</title>\r\n</head>\r\n<body>\r\n<header>\r\n    <nav class=\"navbar navbar-dark bg-primary\">\r\n        <h1>Explorer</h1>\r\n        <h2><a href=\"index\" class=\"btn btn-secondary\">Маршруты</a></h2>\r\n        <h2><a href=\"index_news\" class=\"btn btn-secondary\">Новости</a></h2>\r\n        <h2><a href=\"card\" class=\"btn btn-secondary\">Добавить маршрут</a></h2>\r\n        {% if current_user.is_authenticated %}\r\n            <a class=\"navbar-brand\" href=\"/logout\">{{ current_user.nickname }}</a>\r\n        {% else %}\r\n            <p>\r\n                <a class=\"btn btn-primary \" href=\"/register\">Зарегистрироваться</a>\r\n                <a class=\"btn btn-success\" href=\"/login\">Войти</a>\r\n            </p>\r\n        {% endif %}\r\n    </nav>\r\n</header>\r\n<main role=\"main\" class=\"container\">\r\n    {% block content %}{% endblock %}\r\n</main>\r\n</body>\r\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/base.html b/templates/base.html
--- a/templates/base.html	(revision 3912dad0cc9b32d1f91f2d23519761b7fd6b1f19)
+++ b/templates/base.html	(date 1681905359190)
@@ -1,4 +1,4 @@
-<!DOCTYPE html>
+<!doctype html>
 <html lang="en">
 <head>
     <meta charset="utf-8">
@@ -11,21 +11,11 @@
 </head>
 <body>
 <header>
-    <nav class="navbar navbar-dark bg-primary">
-        <h1>Explorer</h1>
-        <h2><a href="index" class="btn btn-secondary">Маршруты</a></h2>
-        <h2><a href="index_news" class="btn btn-secondary">Новости</a></h2>
-        <h2><a href="card" class="btn btn-secondary">Добавить маршрут</a></h2>
-        {% if current_user.is_authenticated %}
-            <a class="navbar-brand" href="/logout">{{ current_user.nickname }}</a>
-        {% else %}
-            <p>
-                <a class="btn btn-primary " href="/register">Зарегистрироваться</a>
-                <a class="btn btn-success" href="/login">Войти</a>
-            </p>
-        {% endif %}
+    <nav class="navbar navbar-light bg-light">
+        <a class="navbar-brand" href="#">Наше приложение</a>
     </nav>
 </header>
+<!-- Begin page content -->
 <main role="main" class="container">
     {% block content %}{% endblock %}
 </main>
Index: data/users.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import datetime\r\nfrom flask_login import UserMixin\r\n\r\nimport sqlalchemy\r\nfrom sqlalchemy import orm\r\n\r\nfrom .db_session import SqlAlchemyBase\r\n\r\nfrom werkzeug.security import check_password_hash, generate_password_hash\r\n\r\n\r\nclass User(SqlAlchemyBase, UserMixin):\r\n    __tablename__ = 'users'\r\n\r\n    id = sqlalchemy.Column(sqlalchemy.Integer, primary_key=True, autoincrement=True)\r\n    nickname = sqlalchemy.Column(sqlalchemy.String, nullable=True)\r\n    region = sqlalchemy.Column(sqlalchemy.String, nullable=True)\r\n    about = sqlalchemy.Column(sqlalchemy.String, nullable=True)\r\n    email = sqlalchemy.Column(sqlalchemy.String, index=True, unique=True, nullable=True)\r\n    loyality = sqlalchemy.Column(sqlalchemy.Integer, nullable=True)\r\n    hashed_password = sqlalchemy.Column(sqlalchemy.String, nullable=True)\r\n\r\n    def set_password(self, password):\r\n        self.hashed_password = generate_password_hash(password)\r\n\r\n    def check_password(self, password):\r\n        return check_password_hash(self.hashed_password, password)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/data/users.py b/data/users.py
--- a/data/users.py	(revision 3912dad0cc9b32d1f91f2d23519761b7fd6b1f19)
+++ b/data/users.py	(date 1681905359187)
@@ -1,5 +1,4 @@
 import datetime
-from flask_login import UserMixin
 
 import sqlalchemy
 from sqlalchemy import orm
@@ -9,7 +8,7 @@
 from werkzeug.security import check_password_hash, generate_password_hash
 
 
-class User(SqlAlchemyBase, UserMixin):
+class User(SqlAlchemyBase):
     __tablename__ = 'users'
 
     id = sqlalchemy.Column(sqlalchemy.Integer, primary_key=True, autoincrement=True)
@@ -20,8 +19,10 @@
     loyality = sqlalchemy.Column(sqlalchemy.Integer, nullable=True)
     hashed_password = sqlalchemy.Column(sqlalchemy.String, nullable=True)
 
-    def set_password(self, password):
-        self.hashed_password = generate_password_hash(password)
+
+def set_password(self, password):
+    self.hashed_password = generate_password_hash(password)
 
-    def check_password(self, password):
-        return check_password_hash(self.hashed_password, password)
+
+def check_password(self, password):
+    return check_password_hash(self.hashed_password, password)
Index: templates/register.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{% extends \"base.html\" %}\r\n\r\n{% block content %}\r\n<h1>Регистрация</h1>\r\n<form action=\"\" method=\"post\">\r\n    {{ form.hidden_tag() }}\r\n    <p>\r\n        {{ form.email.label }}<br>\r\n        {{ form.email(class=\"form-control\", type=\"email\") }}\r\n        {% for error in form.email.errors %}\r\n            <p class=\"alert alert-danger\" role=\"alert\">\r\n                {{ error }}\r\n            </p>\r\n        {% endfor %}\r\n    </p>\r\n    <p>\r\n        {{ form.password.label }}<br>\r\n        {{ form.password(class=\"form-control\", type=\"password\") }}\r\n        {% for error in form.password.errors %}\r\n            <p class=\"alert alert-danger\" role=\"alert\">\r\n                {{ error }}\r\n            </p>\r\n        {% endfor %}\r\n    </p>\r\n    <p>\r\n        {{ form.password_again.label }}<br>\r\n        {{ form.password_again(class=\"form-control\", type=\"password\") }}\r\n        {% for error in form.password_again.errors %}\r\n            <p class=\"alert alert-danger\" role=\"alert\">\r\n                {{ error }}\r\n            </p>\r\n        {% endfor %}\r\n    </p>\r\n    <p>\r\n        {{ form.nickname.label }}<br>\r\n        {{ form.nickname(class=\"form-control\") }}\r\n        {% for error in form.nickname.errors %}\r\n            <p class=\"alert alert-danger\" role=\"alert\">\r\n                {{ error }}\r\n            </p>\r\n        {% endfor %}\r\n    </p>\r\n    <p>\r\n        {{ form.region.label }}<br>\r\n        {{ form.region(class=\"form-control\") }}\r\n        {% for error in form.region.errors %}\r\n            <p class=\"alert alert-danger\" role=\"alert\">\r\n                {{ error }}\r\n            </p>\r\n        {% endfor %}\r\n    </p>\r\n    <p>\r\n        {{ form.about.label }}<br>\r\n        {{ form.about(class=\"form-control\") }}<br>\r\n        {% for error in form.about.errors %}\r\n            <p class=\"alert alert-danger\" role=\"alert\">\r\n                {{ error }}\r\n            </p>\r\n        {% endfor %}\r\n    </p>\r\n    <p>{{ form.submit(type=\"submit\", class=\"btn btn-primary\") }}</p>\r\n    {{message}}\r\n</form>\r\n{% endblock %}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/register.html b/templates/register.html
--- a/templates/register.html	(revision 3912dad0cc9b32d1f91f2d23519761b7fd6b1f19)
+++ b/templates/register.html	(date 1681905359191)
@@ -6,7 +6,7 @@
     {{ form.hidden_tag() }}
     <p>
         {{ form.email.label }}<br>
-        {{ form.email(class="form-control", type="email") }}
+        {{ form.email(class="form-control", type="email") }}<br>
         {% for error in form.email.errors %}
             <p class="alert alert-danger" role="alert">
                 {{ error }}
@@ -15,7 +15,7 @@
     </p>
     <p>
         {{ form.password.label }}<br>
-        {{ form.password(class="form-control", type="password") }}
+        {{ form.password(class="form-control", type="password") }}<br>
         {% for error in form.password.errors %}
             <p class="alert alert-danger" role="alert">
                 {{ error }}
@@ -24,7 +24,7 @@
     </p>
     <p>
         {{ form.password_again.label }}<br>
-        {{ form.password_again(class="form-control", type="password") }}
+        {{ form.password_again(class="form-control", type="password") }}<br>
         {% for error in form.password_again.errors %}
             <p class="alert alert-danger" role="alert">
                 {{ error }}
@@ -33,7 +33,7 @@
     </p>
     <p>
         {{ form.nickname.label }}<br>
-        {{ form.nickname(class="form-control") }}
+        {{ form.nickname(class="form-control") }}<br>
         {% for error in form.nickname.errors %}
             <p class="alert alert-danger" role="alert">
                 {{ error }}
@@ -42,7 +42,7 @@
     </p>
     <p>
         {{ form.region.label }}<br>
-        {{ form.region(class="form-control") }}
+        {{ form.region(class="form-control") }}<br>
         {% for error in form.region.errors %}
             <p class="alert alert-danger" role="alert">
                 {{ error }}
